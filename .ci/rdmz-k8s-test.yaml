# See https://aka.ms/yaml
# This pipeline to be run on PR and merge into "main" ?
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=example%2Cparameter-schema#triggers
trigger: 
  batch: true
  branches:
    include:
      - topic/*
      - master
    exclude:
      - features/experimental/*
  paths:
    exclude:
      - README.md

# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=example%2Cparameter-schema#resources
resources: 
# - repo: self
  containers:
    - container: ubuntu
      image: rdmz-harbor.rdmz.labs.mlnx/swx-storage/spdk/x86_64/ubuntu2004ofed54:5.4-1.0.3.0

    - container: ubuntu2004
      image: rdmz-harbor.rdmz.labs.mlnx/swx-infra/x86_64/ubuntu20.04/builder:mofed-5.0-1.0.0.0
      options: -v /hpc/local:/hpc/local -v /auto/sw_tools:/auto/sw_tools

variables:
  dockerRegistryServiceConnection: 'swx-rdmz-cstor01-vip' # Docker service connection identifier
  vmImageName: 'ubuntu-latest' # name of your VM
  envName: 'myEnv' # name of your environment
  resourceName: 'scratch' # name of the resource you are referencing (namespace+SA in K8s instance)
  dockerfilePath: '**/Dockerfile'
  # tag: '$(Build.BuildId)' # tag added for your build
  tag: 'latest' # tag added for your build
  k8sNamespaceForPR: 'scratch-pr' # namespace used in your PR
  imagePullSecret: 'swx-rdmz-cstor01-vip' # image pull secret
  imageRepository: 'demo/alpine' # name of image repository
  containerRegistry: 'swx-rdmz-cstor01-vip.rdmz.labs.mlnx:18181' # path to container registry
  k8sServiceConnection: 'RDMZ'


# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pool
pool:
#  vmImage: $(vmImageName)
#  name: MLNX
#  demands:
#  - harbor_registry -equals yes
  name: RDMZ-K8S
  demands:
  - azp_master -equals yes

stages:
- stage: Build
  jobs:
    - job: build_a_code
      displayName: Build a code for "ubuntu"
      container: ubuntu2004
      steps:
        - checkout: self
          clean: true
          fetchDepth: 100

        - bash: |
              autoreconf -v --install
          displayName: Setup autotools
        - bash: |
              ./configure --prefix=/usr/local
              ls -l
              make
          displayName: build the thing

